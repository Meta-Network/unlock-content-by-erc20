import Head from 'next/head'
import dynamic from "next/dynamic";
import React, { useState } from 'react'
import { useWallet } from 'use-wallet'
import { Button, Text } from "@geist-ui/react";
import styles from '../styles/Home.module.css'
import { useRecoilState } from 'recoil';
import { chainIdState } from '../stateAtoms/chainId.atom';
import { ChainIdToName } from '../constant';
import { useMemo } from 'react';
import GuideToConnect from '../components/GuideToConnect';
// dynamic load
const CreateSnippet = dynamic(() => import("../components/Create/CreateSnippet"), { ssr: false }) ;
const SnippetCreated = dynamic(() => import('../components/Create/SnippetCreated'), { ssr: false });


export default function CreateSnippetPage() {
  const wallet = useWallet()

  const [uploadedHash, setUploadedHash] = useState('')

  if (uploadedHash) {
    return <SnippetCreated uploadedHash={uploadedHash} />
  }
    
  const isWalletConnected = useMemo(() => wallet.status === 'connected', [wallet])
    
  return (
    <div className={styles.container}>
      <Head>
        <title>Lock your content with Hodl</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {
        !isWalletConnected ?
          <GuideToConnect />
          : 
            <>
              <CreateSnippet onSent={async (res) => {
                setUploadedHash(res.hash)
              }} />

              {uploadedHash && <a href={`https://ipfs.fleek.co/ipfs/${uploadedHash}`} target="_blank">Go IPFS to See RAW</a>}
              {uploadedHash && <a href={`/${uploadedHash}`}>Decrypt and See</a>}

          </>
        }

      </main>

    </div>
  )
}
